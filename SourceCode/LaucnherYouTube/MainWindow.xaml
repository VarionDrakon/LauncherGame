<Window Background="{x:Null}" x:Class="LaucnherYouTube.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        Title="MainWindow" Height="600" Width="900" Foreground="#FFFFFBFB" WindowStartupLocation="CenterScreen"
    xmlns:System="clr-namespace:System;assembly=mscorlib" WindowStyle="None" ResizeMode="NoResize"
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">
    <Window.Resources>
        <SolidColorBrush x:Key="ButtonBorderBrushCommon" Color="#00000000"/>
        <SolidColorBrush x:Key="ButtonForegroundTextCommon" Color="White"/>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <System:Double x:Key="BackgroundImageApp">0.15</System:Double>
        <SolidColorBrush x:Key="Button.Static.Background1" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border1" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background1" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border1" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background1" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border1" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background1" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border1" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground1" Color="#FF838383"/>
        <Style x:Key="FocusVisual2">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background2" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border2" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background2" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border2" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background2" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border2" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background2" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border2" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground2" Color="#FF838383"/>
        <Style x:Key="FocusVisual3">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background3" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border3" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background3" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border3" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background3" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border3" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background3" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border3" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground3" Color="#FF838383"/>
        <Style x:Key="FocusVisual4">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background4" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border4" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background4" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border4" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background4" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border4" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background4" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border4" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground4" Color="#FF838383"/>
        <Style x:Key="FocusVisual5">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--StyleButtonContentNewsInLauncher-->
        <SolidColorBrush x:Key="Button.Static.Background5" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border5"/>
        <SolidColorBrush x:Key="Button.Static.Foreground5"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background5" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border5" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background5" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border5" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background5" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border5" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground5" Color="#FF838383"/>
        <Style x:Key="StyleButtonContentNewsInLauncher" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual5}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background5}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border5}"/>
            <Setter Property="Foreground" Value="{StaticResource Button.Static.Foreground5}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Margin" Value="3px"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">

                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border5}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border5}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border5}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground5}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual6">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background6" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border6" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background6" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border6" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background6" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border6" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background6" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border6" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground6" Color="#FF838383"/>
        <Style x:Key="ButtonMainStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual6}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background6}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border6}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true" CornerRadius="3">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Cursor" Value="Hand"/>
                                <Setter Property="Margin" Value="10, 5, 0, 0"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Margin" Value="10, 5, 0, 0"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background6}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border6}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground6}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual1">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFFFFFFF"/>
        <Style x:Key="FocusVisual7">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TextBox.Static.Background1" Color="#FFFFFFFF"/>
        <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--Style for ComboBox near button start game-->
        <SolidColorBrush x:Key="ComboBox.Static.Background" Color="#FF009CFF"/>
        <SolidColorBrush x:Key="ComboBox.Static.Border"/>
        <SolidColorBrush x:Key="ComboBox.Static.Glyph"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Background" Color="#FF0085DA"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Border"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Background" Color="#FF0069AB"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Border"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Glyph"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Background"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Border"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Glyph"/>
        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot" Background="{StaticResource ComboBox.Static.Background}" BorderBrush="{StaticResource ComboBox.Static.Border}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="20" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="10" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                    <theme:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MinWidth="{Binding ActualWidth, ElementName=templateRoot}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                        <Border x:Name="dropDownBorder" Background="#FF0A0B17" BorderThickness="1">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="10" VerticalAlignment="Top" Width="10">
                                        <Rectangle x:Name="opaqueRect" Fill="{Binding Background, ElementName=dropDownBorder}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </theme:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <ContentPresenter x:Name="contentPresenter" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <!--StyleComboBoxChooseGameInLauncher-->
        <Style x:Key="StyleComboBoxChooseGameInLauncher" TargetType="{x:Type ComboBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual7}"/>
            <Setter Property="Background" Value="{StaticResource ComboBox.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border}"/>
            <Setter Property="Foreground" Value="#00000000"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="Padding" Value="6,3,5,3"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
            <Style.Triggers>
                <Trigger Property="IsEditable" Value="true">
                    <Setter Property="IsTabStop" Value="false"/>
                    <Setter Property="Padding" Value="2"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--StyleTextBlockInLauncherComboBoxChooseGame-->
        <Style x:Key="StyleTextBlockInLauncherComboBoxChooseGame" TargetType="{x:Type TextBlock}">
            <Setter Property="TextWrapping" Value="NoWrap"/>
            <Setter Property="TextTrimming" Value="None"/>
            <Setter Property="Foreground" Value="#FFE6E6E6"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Margin" Value="3,3,3,3"/>
        </Style>
        <Style x:Key="FocusVisual8">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--StyleButtonLauncherLeftBannerChooseGame-->
        <SolidColorBrush x:Key="Button.Static.Background7"/>
        <SolidColorBrush x:Key="Button.Static.Border7"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background7"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border7"/>
        <SolidColorBrush x:Key="Button.Pressed.Background7"/>
        <SolidColorBrush x:Key="Button.Pressed.Border7"/>
        <Style x:Key="StyleButtonLauncherLeftBannerChooseGame" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual8}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background7}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border7}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Width" Value="282"/>
            <Setter Property="Height" Value="22"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Foreground" Value="#B2FFFFFF"/>
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                <Setter Property="Foreground" Value="#B2FFFFFF"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background7}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border7}"/>
                                <Setter Property="Foreground" Value="#F2FFFFFF"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background7}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border7}"/>
                                <Setter Property="Foreground" Value="#B2FFFFFF"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--StyleTextBlockInLauncherMainTextChooseGame-->
        <Style x:Key="StyleTextBlockInLauncherMainTextChooseGame" TargetType="{x:Type TextBlock}">
            <Setter Property="TextWrapping" Value="NoWrap"/>
            <Setter Property="TextTrimming" Value="None"/>
            <Setter Property="Width" Value="282"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Height" Value="16"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="FontFamily" Value="Arial"/>
        </Style>
        <Style x:Key="FocusVisual9">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--StyleButtonLauncherAdditionalOptionChooseGame-->
        <SolidColorBrush x:Key="Button.Static.Background8"/>
        <SolidColorBrush x:Key="Button.Static.Border8"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background8"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border8"/>
        <SolidColorBrush x:Key="Button.Pressed.Background8"/>
        <SolidColorBrush x:Key="Button.Pressed.Border8"/>
        <SolidColorBrush x:Key="Button.Disabled.Background7"/>
        <SolidColorBrush x:Key="Button.Disabled.Border7"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground7"/>
        <Style x:Key="StyleButtonLauncherAdditionalOptionChooseGame" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual9}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background8}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border8}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="#FF949494"/>
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background8}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border8}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background8}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border8}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background7}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border7}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground7}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual10">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--StyleButtonInLauncherMainChooseGame-->
        <SolidColorBrush x:Key="Button.Static.Background9" Color="#FF009CFF"/>
        <SolidColorBrush x:Key="Button.Static.Border9"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background9"  Color="#FF0085DA"/>
        <SolidColorBrush x:Key="Button.Pressed.Background9" Color="#FF0069AB"/>
        <SolidColorBrush x:Key="Button.Disabled.Background8"  Color="#FF006BAF"/>
        <Style x:Key="StyleButtonInLauncherMainChooseGame" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual10}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background9}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border9}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background9}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background9}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background8}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual11">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--StyleButtonInLauncherMainHeaderBar-->
        <SolidColorBrush x:Key="Button.Static.Background10" Color="#00DDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border10"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background10" Color="#4C0085DA"/>
        <SolidColorBrush x:Key="Button.Pressed.Background10" Color="#FF0069AB"/>
        <SolidColorBrush x:Key="Button.Static.Foreground8" Color="#FF4092A2"/>
        <Style x:Key="StyleButtonInLauncherMainHeaderBar" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual11}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background10}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border10}"/>
            <Setter Property="Foreground" Value="{StaticResource Button.Static.Foreground8}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Width" Value="25"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background10}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background10}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <!--Next comes the markup-->
    <Grid Margin="0,0,0,0" Background="#FF0A0B17">
        <!--Content in laucnher app-->
        <Grid Margin="305,127,0,0" ShowGridLines="True">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Viewbox>
                <ScrollViewer Grid.Column="0" Grid.Row="0" x:Name="ScrollViewerContent" VerticalScrollBarVisibility="Hidden" HorizontalScrollBarVisibility="Hidden" PreviewMouseLeftButtonUp="ScrollViewerContent_PreviewMouseLeftButtonUp" PreviewMouseWheel="ScrollViewerContent_PreviewMouseWheel" PreviewMouseMove="ScrollViewerContent_PreviewMouseMove" PreviewMouseLeftButtonDown="ScrollViewerContent_PreviewMouseLeftButtonDown" Foreground="{x:Null}" Width="200"  Height="200">
                    <WrapPanel Orientation="Vertical" ItemHeight="200" ItemWidth="200">
                        <Button Style="{DynamicResource StyleButtonContentNewsInLauncher}" x:Name="broochButtonContentServer_Content1"/>
                        <Button Style="{DynamicResource StyleButtonContentNewsInLauncher}" x:Name="broochButtonContentServer_Content2"/>
                        <Button Style="{DynamicResource StyleButtonContentNewsInLauncher}" x:Name="broochButtonContentServer_Content3"/>
                        <Button Style="{DynamicResource StyleButtonContentNewsInLauncher}" x:Name="broochButtonContentServer_Content4"/>
                        <Button Style="{DynamicResource StyleButtonContentNewsInLauncher}" x:Name="broochButtonContentServer_Content5"/>
                        <Button Style="{DynamicResource StyleButtonContentNewsInLauncher}" x:Name="broochButtonContentServer_Content6"/>
                    </WrapPanel>
                </ScrollViewer>
            </Viewbox>
        </Grid>
        <!--Header app-->
        <Grid Height="122" VerticalAlignment="Top">
            <!--Header pp control-->
            <Grid Height="60" VerticalAlignment="Top">
                <Rectangle Fill="#FF0A0B17" MouseDown="Image_MouseDown"/>
                <TextBlock x:Name="ServerConnecting" HorizontalAlignment="Left" TextWrapping="Wrap" Text="CHECK SERVER..." VerticalAlignment="Top" Width="140" Height="20" Margin="65,26,0,0" Foreground="#FF949494" FontFamily="Arial" FontSize="16"/>
                <Button x:Name="OpenSettingsWindiowButton" VerticalAlignment="Top" Height="50" Content="" Click="OpenSettingsWindiowButton_Click" HorizontalAlignment="Left" Width="50" BorderBrush="{x:Null}" Margin="10,10,0,0" Focusable="False" Style="{DynamicResource ButtonMainStyle}" Foreground="{x:Null}">
                    <Button.Background>
                        <ImageBrush ImageSource="/res/GameCenterLogotype.png"/>
                    </Button.Background>
                </Button>
            </Grid>
            <!--Button control header app-->
            <Grid Height="25" VerticalAlignment="Top" HorizontalAlignment="Right" Width="76">
                <Button  x:Name="CloseApp"  Style="{DynamicResource StyleButtonInLauncherMainHeaderBar}" Content="X"  BorderBrush="{DynamicResource ButtonBorderBrushCommon}" Click="CloseApp_Click"/>
                <Button  x:Name="RollUpApp" Style="{DynamicResource StyleButtonInLauncherMainHeaderBar}" Content="_" BorderBrush="{DynamicResource ButtonBorderBrushCommon}" Click="RollUpApp_Click" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                <Button x:Name="UnwrapApp"  Style="{DynamicResource StyleButtonInLauncherMainHeaderBar}" Content="=" BorderBrush="{DynamicResource ButtonBorderBrushCommon}" Click="UnwrapApp_Click" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </Grid>
            <!--BannerInLauncher listen app-->
            <Grid Height="47" VerticalAlignment="Bottom" Margin="0,0,0,10">
                <Rectangle x:Name="BackgroundBorderListingApps" Margin="10,0,10,0" Fill="#FF18182B" Height="49" VerticalAlignment="Top" RadiusX="3" RadiusY="3"/>
                <TextBlock x:Name="TextListenApp" HorizontalAlignment="Left" Margin="20,15,0,0" TextWrapping="Wrap" Text="OTHER GAMES" VerticalAlignment="Top" Foreground="#FF949494"/>
                <Image x:Name="IconGameCoal" HorizontalAlignment="Left" Height="40" Margin="123,5,0,0" VerticalAlignment="Top" Width="40" Source="/res/GameCoal.png"/>
                <Image x:Name="IconGameDeatch" HorizontalAlignment="Left" Height="40" Margin="176,5,0,0" VerticalAlignment="Top" Width="40" Source="/res/GameDeatch.png"/>
            </Grid>
        </Grid>
        <!--Left banner choose game-->
        <Grid x:Name="GridInLauncherContentChooseGame" Margin="0,122,0,0" HorizontalAlignment="Left" Width="305">
            <!--BannerInLauncherMainChooseGame-->
            <Grid Height="243" VerticalAlignment="Bottom" Margin="0,0,0,13">
                <TextBlock Style="{DynamicResource StyleTextBlockInLauncherMainTextChooseGame}" x:Name="TextBlockInLauncherComboBoxChooseGame_CurrentVersion" Margin="10,21,0,0" Text="Current Version: "/>
                <TextBlock Style="{DynamicResource StyleTextBlockInLauncherMainTextChooseGame}" x:Name="TextBlockInLauncherComboBoxChooseGame_ServerVersion" Margin="10,0,0,0" Text="Server version: "/>
                <TextBlock Style="{DynamicResource StyleTextBlockInLauncherMainTextChooseGame}" x:Name="AppState" Margin="10,49,0,0" Text="Initializing game..."/>
                <TextBlock Style="{DynamicResource StyleTextBlockInLauncherMainTextChooseGame}" x:Name="SendersArgumentsTextBlock" Margin="10,75,0,0" Text="Arguments for app:" Height="36" />
                <TextBlock Style="{DynamicResource StyleTextBlockInLauncherMainTextChooseGame}" x:Name="DownloadAppState" Margin="13,203,30,10" Text="Initialize update..." Panel.ZIndex="1" Height="NaN" Width="NaN" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
                <Button Style="{DynamicResource StyleButtonInLauncherMainChooseGame}" x:Name="ButtonInLauncher_StopDownloadGame" Content="X" Margin="280,203,0,15" Click="ButtonCancelDownloadApp" Width="25" Height="25" IsEnabled="False"/>

                <ProgressBar Name="ProgressBarExtractFile" Margin="10,0,25,15" Height="25" Width="270" VerticalAlignment="Bottom" BorderBrush="{DynamicResource ButtonBorderBrushCommon}" Background="#FF000E17">
                    <ProgressBar.Foreground>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="#FF009CFF"/>
                            <GradientStop Color="#FF002842" Offset="1"/>
                        </LinearGradientBrush>
                    </ProgressBar.Foreground>
                </ProgressBar>

                <ComboBox x:Name="ComboBoxChooseGameInLauncherAddOptions" Style="{DynamicResource StyleComboBoxChooseGameInLauncher}" VerticalAlignment="Center" Margin="10,0,3,0" IsEditable="True" SelectionChanged="ComboBoxChooseGameInLauncherAddOptions_SelectionChanged" DropDownClosed="ComboBoxChooseGameInLauncherAddOptions_DropDownClosed" >
                    <ComboBoxItem>
                        <TextBlock Text="Kill game" Style="{DynamicResource StyleTextBlockInLauncherComboBoxChooseGame}" />
                    </ComboBoxItem>
                    <ComboBoxItem>
                        <TextBlock Text="Reinstall app" Style="{DynamicResource StyleTextBlockInLauncherComboBoxChooseGame}" />
                    </ComboBoxItem>
                    <ComboBoxItem>
                        <TextBlock Text="Check update" Style="{DynamicResource StyleTextBlockInLauncherComboBoxChooseGame}" />
                    </ComboBoxItem>
                </ComboBox>
                <TextBlock Style="{DynamicResource StyleTextBlockInLauncherMainTextChooseGame}" HorizontalAlignment="Stretch" TextWrapping="Wrap" Text="Additional options" VerticalAlignment="Center" Height="12" Width="NaN" Margin="13,0,5,0" IsHitTestVisible="False"/>
            </Grid>
            <!--Banner In Launcher Button install and option-->
            <Grid Margin="10,0,3,58" Height="62" VerticalAlignment="Bottom">
                <Button Style="{DynamicResource StyleButtonInLauncherMainChooseGame}"  x:Name="LaunchGameButton" Content="Launch" Click="ButtonLaunchGame" RenderTransformOrigin="0.589,0.526" BorderBrush="{DynamicResource ButtonBorderBrushCommon}" HorizontalContentAlignment="Center" FontSize="16" HorizontalAlignment="Left" Width="235"/>
                <ComboBox x:Name="ComboBoxChooseGameInLauncher" Style="{DynamicResource StyleComboBoxChooseGameInLauncher}" SelectionChanged="ComboBoxChooseGameInLauncher_SelectionChanged" DropDownClosed="ComboBoxChooseGameInLauncher_DropDownClosed" HorizontalAlignment="Right" Width="59" IsEditable="True">
                    <ComboBoxItem>
                        <TextBlock x:Name="TextBlockInLauncherComboBoxChooseGame_SettingsGame" Text="Game settings" Style="{DynamicResource StyleTextBlockInLauncherComboBoxChooseGame}" />
                    </ComboBoxItem>
                    <ComboBoxItem>
                        <TextBlock x:Name="TextBlockInLauncherComboBoxChooseGame_OpenInExplorer" Text="Open in explorer" Style="{DynamicResource StyleTextBlockInLauncherComboBoxChooseGame}"/>
                    </ComboBoxItem>
                    <ComboBoxItem>
                        <TextBlock x:Name="TextBlockInLauncherComboBoxChooseGame_CreateIcon" Text="Create icon in desktop" Style="{DynamicResource StyleTextBlockInLauncherComboBoxChooseGame}"/>
                    </ComboBoxItem>
                    <ComboBoxItem>
                        <TextBlock x:Name="TextBlockInLauncherComboBoxChooseGame_VerificationRecovery" Text="Verification and recovery" Style="{DynamicResource StyleTextBlockInLauncherComboBoxChooseGame}"/>
                    </ComboBoxItem>
                    <ComboBoxItem>
                        <TextBlock x:Name="TextBlockInLauncherComboBoxChooseGame_CheckUpdate" Text="Check new version" Style="{DynamicResource StyleTextBlockInLauncherComboBoxChooseGame}"/>
                    </ComboBoxItem>
                    <ComboBoxItem>
                        <TextBlock x:Name="TextBlockInLauncherComboBoxChooseGame_ChangeInstallParametrs" Text="Change install parametrs" Style="{DynamicResource StyleTextBlockInLauncherComboBoxChooseGame}"/>
                    </ComboBoxItem>
                    <ComboBoxItem>
                        <TextBlock x:Name="TextBlockInLauncherComboBoxChooseGame_RemoveGame" Text="Remove the game" Style="{DynamicResource StyleTextBlockInLauncherComboBoxChooseGame}"/>
                    </ComboBoxItem>
                </ComboBox>
                <Image Source="/res/Gear.png" Stretch="Fill" IsHitTestVisible="False" Margin="0,6,4,6" Height="50" HorizontalAlignment="Right" Width="50"/>
            </Grid>
            <!--Banner In Launcher web site and describe choose game-->
            <Grid Height="217" VerticalAlignment="Top" Margin="0,0,1,0">
                <Image x:Name="BannerChooseGameInLauncher_GameFigure" Source="/res/BannerGameFigure.png" Stretch="Fill" Height="135" VerticalAlignment="Top" Margin="10,0,10,0"/>
                <Button x:Name="ButtonLauncherLeftBannerChooseGame_AppPageWebSite" Style="{DynamicResource StyleButtonLauncherLeftBannerChooseGame}" Content="Application page" Margin="0,135,0,0" HorizontalAlignment="Center"/>
                <Button x:Name="ButtonLauncherLeftBannerChooseGame_AppForumWebSite" Style="{DynamicResource StyleButtonLauncherLeftBannerChooseGame}" Content="Forum" Margin="0,160,0,0" HorizontalAlignment="Center"/>
                <Button x:Name="ButtonLauncherLeftBannerChooseGame_AppUpdateDescriptionWebSite" Style="{DynamicResource StyleButtonLauncherLeftBannerChooseGame}" Content="Update Description" Margin="0,185,0,0" HorizontalAlignment="Center"/>
            </Grid>
        </Grid>
    </Grid>
</Window>